Aplicação git e comandos
Criar uma pasta e colocar o nome do projeto
Dentro dessa pasta, clicar com o botão direito e selecionar git bash here
Se necessário, adicionar novos arquivos e fazer a atualização git

Comandos
git init - 		inicializar git
git status - 		verificar se possui atualização a ser adicionada e em qual branch está
git commit -m""		caso não esteja atualizada, aplicar esse comando e colocar nome da alteração dentro das "".
git push 		realiza "upload" da atualização no rep git. Verifica o comando que o proprio git pede para aplicar "git push --set-upstream origin master
git add .		adiciona todos os arquivos da pasta de uma vez para realizar o commit
git reflog		cria um log dos commits realizados caso queira alterar as versões
git reset --hard 	após o reflog, usa o codigo da versão que deseja usar, informado logo após o reflog
git branch		verifica qtas branch tem, e qual é a ativa (ativa fica na cor verde)
git branch staging	o comando branch + o nome na frente (no caso staging) cria uma nova branch, chamada staging
git checkout 'staging'	muda da branch atual, para a branch staging, no caso
git merge staging	faz o merge da branch atual para a branch staging 
git checkout -b comandos-git master - cria uma nova branch (no caso a comandos-git) e faz o switch de "master" para essa nova branch

Ciclo de trabalho git
1 - git pull da branch principal
2 - gerar uma nova branch a partir da branch principal
3 - trabalhar e adicionar nova funcionalidades da nova branch que criou
4 - finalizar o trabalho na branch temporária
5 - git checkout na branch principal
6 - git pull
7 - Mergiar(unir) o código da branch temporaria com a branch principal (depois de testar)
8 - git push da branch principal