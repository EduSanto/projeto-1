Aplicação git e comandos
Criar uma pasta e colocar o nome do projeto
Dentro dessa pasta, clicar com o botão direito e selecionar git bash here
Se necessário, adicionar novos arquivos e fazer a atualização git

Comandos
git init - 							inicializa um novo repositório
git add .							adiciona todos os arquivos da pasta atual de uma vez para o proximo commit
git status - 							verifica o status atual do repositório git. Verificar se possui atualização a ser adicionada e em qual branch está
git commit -m""							Cria um novo commit. Caso não esteja atualizada, aplicar esse comando e colocar nome da alteração dentro das "".
git push 							realiza "upload" da atualização no rep git na nuvem. Verifica o comando que o proprio git pede para aplicar ex: "git push --set-upstream origin master

git reflog							cria um log dos commits realizados caso queira retornar para uma versão anterior
git reset --hard 						após o reflog, usa o codigo da versão que deseja usar, informado logo após o reflog

git branch							verifica qtas branch tem, e qual é a ativa (ativa fica na cor verde)
git branch staging						o comando branch + o nome na frente (no caso staging) cria uma nova branch, chamada staging
git checkout nome-da-branch					muda da branch atual para uma nova branch
git merge "branch a receber merge"				permite fazer o merge da branch ativa atualmente com outra branch 
git checkout -b "nome-da-branch-origem" "nome-nova-branch" 	permite mudar e criar uma nova branch com base em outra
git pull							atualiza a branch atualmente ativa
touch .gitignore						adiciona um arquivo chamado .gitignore, usado para que arquivo secretos, ou não interessantes ao projeto, não sejam adicionados

Ciclo de trabalho git
1 - git pull da branch principal
2 - gerar uma nova branch a partir da branch principal
3 - trabalhar e adicionar nova funcionalidades da nova branch que criou
4 - finalizar o trabalho na branch temporária
5 - git checkout na branch principal
6 - git pull
7 - Mergiar(unir) o código da branch temporaria com a branch principal (depois de testar)
8 - git push da branch principal